/*
 * Hibernate, Relational Persistence for Idiomatic Java
 *
 * License: GNU Lesser General Public License (LGPL), version 2.1 or later.
 * See the lgpl.txt file in the root directory or <http://www.gnu.org/licenses/lgpl-2.1.html>.
 */
description = 'Annotation Processor to generate JPA 2 static metamodel classes'

apply from: rootProject.file( 'gradle/published-java-module.gradle' )
apply plugin: 'version-injection'

java {
    sourceCompatibility = jdks.versions.getBaseline(  )
    targetCompatibility = 17
}

//configurations {
//    modelImplementation {
//        extendsFrom implementation
//    }
//    modelAnnotationProcessor {
//        extendsFrom annotationProcessor
//    }
//    testImplementation {
//        extendsFrom modelImplementation
//    }
//}

dependencies {
    // api - ewww... but Maven needs them this way
    api project( ':hibernate-core' )
    api jakartaLibs.jaxbApi
    api jakartaLibs.jaxb
    api jakartaLibs.validation
    api jakartaLibs.annotation
    api libs.antlrRuntime
    api libs.byteBuddy

}

sourceSets.main {
	java.srcDir xjcTargetDir
	resources.srcDir xsdDir
}

compileTestJava {
	options.compilerArgs += [
			"-proc:none"
	]
}

task jaxb {
	// configure Gradle up-to-date checking
	inputs.dir( xsdDir ).withPropertyName("xsdDir" ).withPathSensitivity( PathSensitivity.RELATIVE )
	outputs.dir( xjcTargetDir )
	outputs.cacheIf { true }

	// perform actions
	doLast {
		xjcTargetDir.mkdirs()

		ant.taskdef(name: 'xjc', classname: 'org.jvnet.jaxb2_commons.xjc.XJC2Task', classpath: configurations.xjc.asPath)

		ant.xjc(
				destdir: ( xjcTargetDir as File ).absolutePath,
				package: 'org.hibernate.jpamodelgen.xml.jaxb',
				extension: 'true'
		) {
			project.ant.arg line: '-no-header'
			project.ant.arg line: '-npa'
			schema( dir: xsdDir.path, includes: "*.xsd" )
		}
	}
}

tasks.sourcesJar.dependsOn ':hibernate-core:generateHqlParser'
tasks.sourcesJar.dependsOn ':hibernate-core:generateSqlScriptParser'
tasks.compileJava.dependsOn jaxb

checkstyleMain.exclude '**/jaxb/**'

